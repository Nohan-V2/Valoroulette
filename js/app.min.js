const $btnSelectAll=document.querySelector(".btn-select-all");const $btnRoll=document.querySelector(".btn-roll");const $btnDeselectAll=document.querySelector(".btn-deselect-all");const $roleButtons={duelist:document.querySelector(".duelist"),initiator:document.querySelector(".initiator"),controller:document.querySelector(".controller"),sentinel:document.querySelector(".sentinel")};const $namePersonSelected=document.querySelector(".name-person-selected");const $agentsList=document.querySelector(".agents-list");const $messageAllAgentsLocked=document.querySelector(".message-all-agents-locked");let lastSelectedAgentName=null;let agentCards=[];const resetSelection=()=>{document.querySelectorAll(".agent-card").forEach(agent=>{agent.classList.remove("selected","not-selected")});$namePersonSelected.textContent="Aucun";$namePersonSelected.classList.add("invisible");lastSelectedAgentName=null};const checkAllAgentsLocked=()=>{const allAgents=document.querySelectorAll(".agent-card");const allLocked=Array.from(allAgents).every(agent=>agent.classList.contains("locked"));$messageAllAgentsLocked.classList.toggle("hidden",!allLocked)};const filterAgentsByRole=roleName=>{resetSelection();agentCards.forEach(card=>{const isMatchingRole=card.role===roleName;card.element.classList.toggle("locked",!isMatchingRole)});checkAllAgentsLocked()};const selectRandomAgent=()=>{const unlockedAgents=document.querySelectorAll(".agent-card:not(.locked)");let availableAgents=Array.from(unlockedAgents);if(lastSelectedAgentName&&availableAgents.length>1){availableAgents=availableAgents.filter(agent=>agent.querySelector(".agent-img").alt!==lastSelectedAgentName)}if(availableAgents.length===0){console.log("Aucun agent disponible pour la sÃ©lection");return}const randomIndex=Math.floor(Math.random()*availableAgents.length);const selectedAgent=availableAgents[randomIndex];lastSelectedAgentName=selectedAgent.querySelector(".agent-img").alt;document.querySelectorAll(".agent-card").forEach(agent=>{agent.classList.add("not-selected");agent.classList.remove("selected")});selectedAgent.classList.remove("not-selected");selectedAgent.classList.add("selected");$namePersonSelected.textContent=lastSelectedAgentName;$namePersonSelected.classList.remove("invisible")};async function loadAgents(){try{const response=await fetch("https://valorant-api.com/v1/agents");const data=await response.json();data.data.forEach(agent=>{if(agent.isPlayableCharacter){const $agentCard=document.createElement("li");$agentCard.classList.add("agent-card");const $agentImg=document.createElement("img");$agentImg.classList.add("agent-img");$agentImg.alt=agent.displayName;$agentImg.src=agent.displayIcon;$agentCard.appendChild($agentImg);const $lockIcon=document.createElement("img");$lockIcon.classList.add("lock-icon");$lockIcon.src="assets/img/lock.svg";$agentCard.appendChild($lockIcon);$agentsList.appendChild($agentCard);agentCards.push({element:$agentCard,role:agent.role?.displayName||null,name:agent.displayName});$agentCard.addEventListener("click",()=>{resetSelection();$agentCard.classList.toggle("locked");checkAllAgentsLocked()})}});$btnSelectAll.addEventListener("click",()=>{resetSelection();agentCards.forEach(card=>card.element.classList.remove("locked"));checkAllAgentsLocked()});$btnDeselectAll.addEventListener("click",()=>{resetSelection();agentCards.forEach(card=>card.element.classList.add("locked"));checkAllAgentsLocked()});$btnRoll.addEventListener("click",selectRandomAgent);$roleButtons.duelist.addEventListener("click",()=>filterAgentsByRole("Duelist"));$roleButtons.initiator.addEventListener("click",()=>filterAgentsByRole("Initiator"));$roleButtons.controller.addEventListener("click",()=>filterAgentsByRole("Controller"));$roleButtons.sentinel.addEventListener("click",()=>filterAgentsByRole("Sentinel"));checkAllAgentsLocked()}catch(error){console.error("Erreur:",error)}}loadAgents();