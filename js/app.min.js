const $btnSelectAll=document.querySelector(".btn-select-all"),$btnRoll=document.querySelector(".btn-roll"),$btnDeselectAll=document.querySelector(".btn-deselect-all"),$roleButtons=document.querySelectorAll(".btn-role"),$namePersonSelected=document.querySelector(".name-person-selected"),$agentsList=document.querySelector(".agents-list"),$messageAllAgentsLocked=document.querySelector(".message-all-agents-locked");let lastSelectedAgentName=null,agentCards=[],activeRoles=new Set;const resetSelected=()=>{document.querySelectorAll(".agent-card").forEach((e=>{e.classList.remove("selected")})),$namePersonSelected.textContent="Aucun",$namePersonSelected.classList.add("invisible")},resetSelection=()=>{document.querySelectorAll(".agent-card").forEach((e=>{const t=e.querySelector(".agent-img"),l=e.querySelector(".lock-icon");t.classList.remove("locked","not-selected"),l.style.display="none"})),resetSelected(),lastSelectedAgentName=null},checkAllAgentsLocked=()=>{const e=document.querySelectorAll(".agent-img"),t=Array.from(e).every((e=>e.classList.contains("locked")));$messageAllAgentsLocked.classList.toggle("hidden",!t)},handleRoleFilter=e=>{resetSelected(),agentCards.forEach((t=>{const l=t.element.querySelector(".agent-img"),s=t.element.querySelector(".lock-icon");t.role===e?(l.classList.remove("locked","not-selected"),s.style.display="none"):(l.classList.add("locked"),s.style.display="block")})),checkAllAgentsLocked()},handleRoleToggle=e=>{activeRoles.has(e)?activeRoles.delete(e):activeRoles.add(e),agentCards.forEach((e=>{const t=e.element.querySelector(".agent-img"),l=e.element.querySelector(".lock-icon");0===activeRoles.size||activeRoles.has(e.role)?(t.classList.remove("locked","not-selected"),e.element.classList.remove("selected"),l.style.display="none"):(t.classList.add("locked"),l.style.display="block")})),checkAllAgentsLocked()},selectRandomAgent=()=>{const e=document.querySelectorAll(".agent-card .agent-img:not(.locked)");let t=Array.from(e);if(lastSelectedAgentName&&t.length>1&&(t=t.filter((e=>e.alt!==lastSelectedAgentName))),0===t.length)return void console.log("Aucun agent disponible pour la sÃ©lection");const l=t[Math.floor(Math.random()*t.length)],s=l.closest(".agent-card");lastSelectedAgentName=l.alt,document.querySelectorAll(".agent-card").forEach((e=>{e.querySelector(".agent-img").classList.add("not-selected"),e.classList.remove("selected")})),l.classList.remove("not-selected"),s.classList.add("selected"),$namePersonSelected.textContent=lastSelectedAgentName,$namePersonSelected.classList.remove("invisible")};async function loadAgents(){try{const e=await fetch("https://valorant-api.com/v1/agents");(await e.json()).data.forEach((e=>{if(e.isPlayableCharacter){const t=document.createElement("li");t.classList.add("agent-card");const l=document.createElement("img");l.classList.add("agent-img"),l.alt=e.displayName,l.src=e.displayIcon,t.appendChild(l);const s=document.createElement("img");s.classList.add("lock-icon"),s.src="assets/img/lock.svg",t.appendChild(s),$agentsList.appendChild(t),agentCards.push({element:t,role:e.role?.displayName||null,name:e.displayName}),t.addEventListener("click",(()=>{l.classList.toggle("locked"),s.style.display=l.classList.contains("locked")?"block":"none",checkAllAgentsLocked()}))}})),$btnSelectAll.addEventListener("click",(()=>{resetSelected(),resetRoleButtons(),agentCards.forEach((e=>{const t=e.element.querySelector(".agent-img"),l=e.element.querySelector(".lock-icon");t.classList.remove("locked","not-selected"),l.style.display="none"})),checkAllAgentsLocked()})),$btnDeselectAll.addEventListener("click",(()=>{resetSelected(),resetRoleButtons(),agentCards.forEach((e=>{const t=e.element.querySelector(".agent-img"),l=e.element.querySelector(".lock-icon");t.classList.add("locked"),t.classList.remove("not-selected"),l.style.display="block"})),checkAllAgentsLocked()})),$btnRoll.addEventListener("click",selectRandomAgent),$roleButtons.forEach((e=>{e.addEventListener("click",(()=>{const t=e.classList[1];handleRoleToggle(t.charAt(0).toUpperCase()+t.slice(1)),e.classList.toggle("selected")}))})),checkAllAgentsLocked()}catch(e){console.error("Erreur:",e)}}const resetRoleButtons=()=>{activeRoles.clear(),$roleButtons.forEach((e=>{e.classList.remove("selected")}))};loadAgents();